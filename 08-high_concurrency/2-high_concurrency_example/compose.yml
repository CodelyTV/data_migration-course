services:
  8_2_first_importation-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: codely
      POSTGRES_PASSWORD: c0d3ly7v
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./databases/postgres:/docker-entrypoint-initdb.d
      - ./databases/data:/docker-entrypoint-initdb.d/data
      - ./etc/postgres/init-primary.sh:/docker-entrypoint-initdb.d/init-primary.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codely -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5

  8_2_first_importation-postgres-replica:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: codely
      POSTGRES_PASSWORD: c0d3ly7v
    ports:
      - "5433:5432"
    volumes:
      - pg_replica_data_new:/var/lib/postgresql/data
      - ./etc/postgres/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    command: ["postgres", "-c", "log_statement=all", "-c", "hot_standby=on"]
    depends_on:
      8_2_first_importation-postgres:
        condition: service_healthy

  8_2_first_importation-rabbitmq:
    image: rabbitmq:3.12-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=codely
      - RABBITMQ_DEFAULT_PASS=codely

volumes:
  pg_data:
  pg_replica_data_new:
